version: '3.8'

services:
  backend:
    container_name: oinkbrew-api
    build: backend/.
    command: npm run start:dev
    depends_on:
      - database
      - cache
    ports:
      - "3000:3000"
    environment:
      JWT_OTP_TOKEN_SECRET: "169ed2a7-cfbb-4d8a-ba41-abd75ac40f74"
      JWT_OTP_TOKEN_EXPIRATION_TIME: "15"
      JWT_ACCESS_TOKEN_SECRET: "7a81ac07-30c1-40bd-82af-a60536038464"
      JWT_ACCESS_TOKEN_EXPIRATION_TIME: "15"
      JWT_REFRESH_TOKEN_SECRET: "bfc23553-ab7a-4d01-b7d7-9602a00db09b"
      JWT_REFRESH_TOKEN_EXPIRATION_TIME: "7"
      DATABASE_URL: "postgresql://postgres:123@localhost:5432/oinkbrew?schema=public"
    volumes:
      - ./backend/.:/opt/app
      - /opt/app/node_modules

  database:
    image: postgres:15.1-alpine
    container_name: oinkbrew-db
    restart: 'unless-stopped'
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: oinkbrew
      PGDATA: '/var/lib/postgresql/data/pgdata'
    volumes:
      - database:/var/lib/postgresql/data # This is where the database data is stored - a docker volume
      - ./backup:/backup

  cache:
    image: redis:7.0.5-alpine
    container_name: oinkbrew-cache
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - cache:/data

volumes:
  database:
    name: oinkbrew-db
  cache:
    name: oinkbrew-cache
    driver: local
